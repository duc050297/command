# docs
https://ubuntu.com/tutorials/install-and-configure-nginx#1-overview

# Managing the Nginx Process
sudo systemctl stop nginx
sudo systemctl start nginx
sudo systemctl restart nginx
sudo systemctl reload nginx
sudo systemctl disable nginx
sudo systemctl enable nginx

# copy source code
sudo cp -r dist/template-quickstart-angular/browser/ /var/www/angular-app

# config 
sudo nano /etc/nginx/sites-available/my_domain
sudo ln -s /etc/nginx/sites-available/your_domain /etc/nginx/sites-enabled/

# show log
tail -f /var/log/nginx/access.log
tail -f /var/log/nginx/error.log
tail -f /var/log/nginx/*.log       # show error + access

# restart service after making change
sudo systemctl restart nginx

cd /etc/nginx/sites-enabled
sudo vim tutorial
# /etc/nginx/sites-enabled/tutorial
server {
       listen 81;
       listen [::]:81;

       server_name example.ubuntu.com;

       root /var/www/tutorial;
       index index.html;

       location / {
               try_files $uri $uri/ =404;
       }
}

example 1:
server {
    listen       80;
    server_name  https://filehub.dev.vcadm.vn;

    # Serve Angular app
    location / {
        root   /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location /api/ {
        rewrite /api/(.*) /api/$1  break;
        proxy_pass https://hap-service.dev.vcadm.vn;  # The target backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Forward cookies from the backend
        #proxy_cookie_path /api/ /;  # Change the path of cookies
        #proxy_cookie_domain <backend-domain> $host;  # Change the domain of cookies

        # Optional: Disable SSL verification if required (though it's better to keep this enabled in production)
        # proxy_ssl_verify off;

        # Enable WebSocket support if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Log proxy events (set debug level to assist with debugging)
        access_log /var/log/nginx/api_proxy_access.log;
        error_log /var/log/nginx/api_proxy_error.log debug;
    }

    # Gzip compression for better performance
    gzip on;
    gzip_types text/plain application/javascript text/css application/json application/xml;
    gzip_proxied any;
    gzip_min_length 256;
}

# load balancing
thêm vào file: /etc/nginx/nginx.conf

stream {
    upstream pod53{
        server 10.5.94.102:10148;
    }
    map $server_addr $x {
        10.5.94.102 pod53;
    }
    server {
        listen 4006;
        proxy_pass $x;
    }
}

